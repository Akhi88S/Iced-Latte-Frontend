name: CI/CD Pipeline for DEV environment

on:
  push:
    branches: [ development ]
  pull_request:
    types: [closed]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  DEV_DOCKER_COMPOSE_FILE: docker-compose.dev.yml

jobs:
  setup-environment:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: Generate .env file from secrets
      run: |
        export
        echo "${{ secrets.ENV_FILE }}" > .env
    - name: Create envs
      shell: bash
      run: |
         export IMAGE_TAG=$GITHUB_REF_NAME-${GITHUB_SHA:0:7}
         export
  build-docker-image:
    runs-on: self-hosted
    needs: setup-environment
    steps:
    - name: Build the docker image
      run: |
        export
        docker-compose -f $DEV_DOCKER_COMPOSE_FILE build
  push-to-docker-hub:
    runs-on: self-hosted
    needs: build-docker-image
    steps:
    - name: Log in to docker hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Push image
      run: docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:$GITHUB_REF_NAME-${GITHUB_SHA:0:7}
  deploy-to-server:
    runs-on: self-hosted
    needs: push-to-docker-hub
    steps:
      - name: Deploy image via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEV_SSH_HOST }}
          port: ${{ secrets.DEV_SSH_PORT }}
          username: ${{ secrets.DEV_SSH_USER }}
          key: ${{ secrets.DEV_SSH_PRIV_KEY }}
          script: |
            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            export IMAGE_NAME=${{ secrets.IMAGE_NAME }}
            export IMAGE_TAG=${{ env.BRANCH }}-${{ env.SHA_SHORT }}
            export
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            docker pull $DOCKERHUB_USERNAME/$IMAGE_NAME:$IMAGE_TAG
            cd /opt/project/actions-runner/_work/Online-Store-Frontend/Online-Store-Frontend && docker-compose -f docker-compose.dev.yml up -d
