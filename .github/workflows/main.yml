name: CI/CD Pipeline

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

env:
  IMAGE_NAME: s083r/latte-frontend
  DOCKER_COMPOSE_FILE: docker-compose.dev.yml

jobs:
  build-and-tag-image:
    name: Build and Tag Docker Image
    runs-on: self-hosted
    outputs:
      tag: ${{ steps.prep.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
      - name: Prepare Environment File and Image Tag
        id: prep
        shell: bash
        run: |
          echo "Creating .env file from secrets"
          echo "${{ secrets.ENV_FILE }}" > .env
          TAG="${GITHUB_REF#refs/heads/}-${GITHUB_SHA::8}"
          echo "Setting TAG in environment to $TAG"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "::set-output name=tag::$TAG"
          echo "Image tag prepared: $TAG"
      - name: Build Docker Image
        run: |
          echo "Building image $IMAGE_NAME:${{ env.TAG }}"
          docker-compose -f $DOCKER_COMPOSE_FILE build
          echo "Docker image built successfully"

  push-to-docker-hub:
    name: Push Image to Docker Hub
    needs: build-and-tag-image
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - name: Docker Hub Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Push Docker Image to Registry
        run: |
          echo "Pushing Docker image $IMAGE_NAME:${{ env.TAG }} to Docker Hub"
          docker push $IMAGE_NAME:${{ env.TAG }}
          echo "Docker image pushed successfully"

  deploy-to-server:
    name: Deploy Image to Server
    needs: push-to-docker-hub
    runs-on: self-hosted
    steps:
      - name: SSH and Deploy Docker Image
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DEV_SSH_HOST }}
          port: ${{ secrets.DEV_SSH_PORT }}
          username: ${{ secrets.DEV_SSH_USER }}
          key: ${{ secrets.DEV_SSH_PRIV_KEY }}
          script: |
            echo "Logging in to Docker Hub via SSH"
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            echo "Pulling $IMAGE_NAME:${{ env.TAG }}"
            export TAG=${{ env.TAG }}
            docker pull $IMAGE_NAME:${TAG}
            echo "Starting deployment using docker-compose"
            cd /opt/project/actions-runner/_work/Online-Store-Frontend/Online-Store-Frontend
            docker-compose -f $DOCKER_COMPOSE_FILE up -d
            echo "Deployment completed successfully"
